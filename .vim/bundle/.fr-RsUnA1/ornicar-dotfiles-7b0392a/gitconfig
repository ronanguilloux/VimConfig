[user]
	name = ornicar
	email = thibault.duplessis@gmail.com

[color]
	ui = true

[color "diff"]
    whitespace = red reverse

[core]
	editor = vim
    whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol

[merge]
	tool = vimdiff

[web]
    browser = chromium

[alias]

    # Show status and diff of dirty submodules
    subdiff = !"git submodule foreach --recursive --quiet '[ \"$(git status -s)\" ] && echo \"--- $name ---\" && git status -s && git diff --unified=1 || :'"

    # Pull all submodules
    subpull = !"git submodule foreach git pull"

    # Update all submodules
    subupdate = !"git submodule sync && git submodule update --init --recursive"

    # Checkout master branch of all submodules
    subcheckout = !"git submodule foreach git checkout master"

    # Reset all submodules
    subreset = !"git submodule foreach --recursive git checkout -- . && git submodule foreach --recursive git clean -f"

    # show list of contributors in descending order by number of commits
    rank = shortlog -sn --no-merges

    # given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

    # Search for a given string in all patches and print commit messages
    # example: search for any commit that adds or removes string "foobar"
    #     git searchcommits foobar
    # example: search commits for string "foobar" in directory src/lib
    #     git searchcommits foobar src/lib
    # example: search commits for "foobar", print full diff of commit with 1 line context
    #     git searchcommits foobar --pickaxe-all -U1 src/lib
    searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""

    # Add modified files to previous commit
    oups = "!git add -A -v && git commit --amend -C HEAD"

    # very compact log
    lol = log --graph --decorate --pretty=format:'%h %an: %s' --abbrev-commit
